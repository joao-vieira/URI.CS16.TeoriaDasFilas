{"version":3,"sources":["utils/useForm.js","components/Container/index.js","components/SimulateButton/index.js","components/Config/styles.js","components/Config/index.js","components/Data/styles.js","components/Data/index.js","components/ResultGrid/styles.js","components/ResultGrid/index.js","utils/funcs.js","components/Panels/styles.js","components/Panels/index.js","styles/global.js","App.js","index.js"],"names":["useForm","initialValues","callback","useState","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","name","value","Container","styled","div","SimulateButton","button","attrs","props","type","InputLine","Config","htmlFor","id","time","onChange","clientsNumber","Data","entryOne","entryTwo","entryThree","serviceOne","serviceTwo","serviceThree","ResultGrid","entries","services","map","entry","idx","key","parseFloat","toFixed","readOnly","disabled","service","averageNumber","averageTime","averageRate","PanelsLine","Panel","Table","table","Panels","data","useEffect","scenarios","newTableLeft","scenario","number","rate","newTableRight","i","obj","n","result","Math","pow","probability","push","p","values","setTableLeft","setTableRight","tableLeft","tableRight","className","row","idx2","createGlobalStyle","App","one","two","three","servOne","servTwo","servThree","setNewEntries","defineNewEntries","setShowResult","error","console","log","newEntries","showResult","onSubmit","autoComplete","style","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c739d24.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (initialValues, callback) => {\n  const [inputs, setInputs] = useState(initialValues);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback();\n  };\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  };\n\n  return { handleSubmit, handleInputChange, inputs };\n};\n\nexport default useForm;","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 80px auto;\n  background: #FFF;\n  border-radius: 5px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n  padding: 2%;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst SimulateButton = styled.button.attrs(props => ({\n  type: 'submit',\n}))`\n  width: 100%;\n  border-radius: 8px;\n  border: none;\n  padding: 2%;\n  margin: 1%;\n  font-size: 18px;\n  font-weight: 700;\n  color: white;\n  background-color: #4CA1AF;\n`;\n\nexport default SimulateButton;","import styled from 'styled-components';\n\nexport const InputLine = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 5% 0;\n\n  input {\n    outline: none;\n    border: 0.5px solid #CCC;\n    border-radius: 5px;\n    padding: 12px 40px;\n    font-size: 16px;\n    text-align: center;\n  }\n`;\n","import React, { Fragment } from 'react';\n\nimport { InputLine } from './styles';\n\nfunction Config({ inputs, handleInputChange }) {\n  return (\n    <Fragment>\n      <InputLine>\n        <label htmlFor=\"time\">Tempo (min)</label>\n        <input type=\"number\" id=\"time\" name=\"time\" value={inputs.time} onChange={handleInputChange} />\n        <label htmlFor=\"clients\">Clientes (máx)</label>\n        <input type=\"number\" id=\"clientsNumber\" name=\"clientsNumber\" value={inputs.clientsNumber} onChange={handleInputChange}  />\n      </InputLine>\n    </Fragment>\n  );\n};\n\nexport default Config;\n","import styled from 'styled-components';\n\nexport const InputLine = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 2%;\n\n  input {\n    outline: none;\n    border: 0.5px solid #DDD;\n    border-radius: 5px;\n    padding: 10px 30px;\n    font-size: 14px;\n    text-align: center;\n  }\n`;","import React, { Fragment } from 'react';\n\nimport { InputLine } from './styles';\n\nfunction Data({ inputs, handleInputChange }) {\n  return (\n    <Fragment>\n      <h5>Chegadas (λ)</h5>\n      <hr/>\n      <InputLine>\n        <input type=\"number\" id=\"entryOne\" name=\"entryOne\" value={inputs.entryOne} onChange={handleInputChange} />\n        <input type=\"number\" id=\"entryTwo\" name=\"entryTwo\" value={inputs.entryTwo} onChange={handleInputChange} />\n        <input type=\"number\" id=\"entryThree\" name=\"entryThree\" value={inputs.entryThree} onChange={handleInputChange} />\n      </InputLine>\n      <h5>Serviço (µ)</h5>\n      <hr/>\n      <InputLine>\n        <input type=\"number\" id=\"serviceOne\" name=\"serviceOne\" value={inputs.serviceOne} onChange={handleInputChange} />\n        <input type=\"number\" id=\"serviceTwo\" name=\"serviceTwo\" value={inputs.serviceTwo} onChange={handleInputChange} />\n        <input type=\"number\" id=\"serviceThree\" name=\"serviceThree\" value={inputs.serviceThree} onChange={handleInputChange} />\n      </InputLine>\n      \n    </Fragment>\n  );\n};\n\nexport default Data;\n","import styled from 'styled-components';\n\nexport const InputLine = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 1.5%;\n\n  input {\n    outline: none;\n    border: 0.5px solid #DDD;\n    border-radius: 5px;\n    padding: 10px 30px;\n    font-size: 14px;\n    text-align: center;\n  }\n`;\n","import React, { Fragment } from 'react';\n\nimport { InputLine } from './styles';\n\nfunction ResultGrid({ inputs }) {\n  const { entries, services } = inputs;\n\n  return (\n    <Fragment>\n      <InputLine>\n        {entries.map((entry, idx) => <input type=\"text\" key={idx} value={parseFloat(entry).toFixed(2)} readOnly disabled />)}\n      </InputLine>\n      <InputLine>\n        {services.map((service, idx) => <input type=\"text\" key={idx} value={parseFloat(service).toFixed(2)} readOnly disabled />)}\n      </InputLine>\n    </Fragment>\n  );\n};\n\nexport default ResultGrid;\n","export function averageNumber(entry, service) {\n  return parseFloat(entry / (service - entry)).toFixed(2);\n}\n\nexport function averageTime(entry, service) {\n  return parseFloat(1 / (service - entry)).toFixed(2);\n}\n\nexport function averageRate(entry, service) {\n  return parseFloat(entry / service).toFixed(2);\n}\n\nexport function probability(entry, service, n) {\n  const result = (1 - entry/service) * Math.pow((entry/service), n);\n  return parseFloat(result).toFixed(2);\n}","import styled from 'styled-components';\n\nexport const PanelsLine = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n`;\n\nexport const Panel = styled.div`\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  padding: 10%;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: center;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #EEE;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport { averageNumber, averageTime, averageRate, probability } from '../../utils/funcs';\n\nimport { PanelsLine, Panel, Table } from './styles';\n\nfunction Panels({ data, clientsNumber }) {\n  useEffect(() => {\n    const { entries, services } = data;    \n    const scenarios = ['A', 'B', 'C'];\n\n    const newTableLeft = entries.map((entry, idx) => {\n      return {\n        scenario: scenarios[idx],\n        number: averageNumber(entry, services[idx]),\n        time: averageTime(entry, services[idx]),\n        rate: averageRate(entry, services[idx]),\n      };\n    });\n\n    let newTableRight = [];\n    for (let i = 0; i < clientsNumber; i++) {\n      const obj = entries.map((entry, idx) => probability(entry, services[idx], i));\n      newTableRight.push({\n        p: `P(${i})`,\n        values: obj\n      }); \n    }\n\n    setTableLeft(newTableLeft);\n    setTableRight(newTableRight);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [tableLeft, setTableLeft] = useState([]);\n  const [tableRight, setTableRight] = useState([]);\n\n  return (\n    <PanelsLine>\n      <Panel>\n        <Table>\n          <thead>\n            <tr>\n              <th className=\"text-center\">Cenário</th>\n              <th className=\"text-center\">Nº Médio de Objetos</th>\n              <th className=\"text-center\">Tempo Médio Despendido</th>\n              <th className=\"text-center\">Taxa Média de Ocupação</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableLeft.map((row, idx) => (\n              <tr key={idx}>\n                <td className=\"text-center\">{row.scenario}</td>\n                <td className=\"text-center\">{row.number}</td>\n                <td className=\"text-center\">{row.time}</td>\n                <td className=\"text-center\">{row.rate}</td>  \n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Panel>\n      <Panel>\n        <Table>\n          <thead>\n            <tr>\n              <th className=\"text-center\">P(x)</th>\n              <th className=\"text-center\">A</th>\n              <th className=\"text-center\">B</th>\n              <th className=\"text-center\">C</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRight.map((row, idx) => (\n              <tr key={idx}>\n                <td className=\"text-center\">{row.p}</td>\n                {row.values.map((value, idx2) => <td key={idx2} className=\"text-center\">{value}</td>)}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Panel>\n    </PanelsLine>\n  );\n};\n\nexport default Panels;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    box-sizing: border-box;\n  }\n\n  html {\n    min-height: 100%;\n  }\n\n  body, #root {\n    background: #4CA1AF;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to right, #C4E0E5, #4CA1AF);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to right, #C4E0E5, #4CA1AF); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n    font-family: 'Josefin Sans', sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  h2 {\n    font-weight: 700;\n  }\n\n  /* == CUSTOM == */\n  .text-center {\n    text-align: center;\n  }\n`;\n","import React, { Fragment, useState } from 'react';\n\nimport useForm from './utils/useForm';\n\nimport Container from './components/Container';\nimport SimulateButton from './components/SimulateButton';\nimport Config from './components/Config';\nimport Data from './components/Data';\nimport ResultGrid from './components/ResultGrid';\nimport Panels from './components/Panels';\n\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  function defineNewEntries() {\n    const {time, entryOne, entryTwo, entryThree, serviceOne, serviceTwo, serviceThree} = inputs;\n\n    const one = parseFloat(time / entryOne);\n    const two = parseFloat(time / entryTwo);\n    const three = parseFloat(time / entryThree);\n\n    const servOne = parseFloat(time / serviceOne);\n    const servTwo = parseFloat(time / serviceTwo);\n    const servThree = parseFloat(time / serviceThree);\n\n    setNewEntries({\n      entries: [one, two, three],\n      services: [servOne, servTwo, servThree]\n    });\n  };\n\n  function calculate() {\n    try {\n      defineNewEntries();\n      setShowResult(true);\n    } catch (error) {\n      console.log('E', error);\n    }\n  }\n\n  const { inputs, handleInputChange, handleSubmit } = useForm({time: 0, clientsNumber: 0, entryOne: 0, entryTwo: 0, entryThree: 0, serviceOne: 0, serviceTwo: 0, serviceThree: 0}, calculate);\n  const [newEntries, setNewEntries] = useState({entries: [], services: []});\n  const [showResult, setShowResult] = useState(false);\n\n\n  return (\n    <Fragment>\n      <Container>\n        <h2 className=\"text-center\">ENTRADA DE DADOS</h2>\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <Config inputs={inputs} handleInputChange={handleInputChange} />\n          <Data inputs={inputs} handleInputChange={handleInputChange} />\n          <SimulateButton>SIMULAR</SimulateButton>\n        </form>\n      </Container>\n      {\n        showResult &&\n          <Container>\n            <h2 className=\"text-center\">RESULTADOS</h2>\n            <ResultGrid inputs={newEntries} />\n            <hr style={{ margin: '2% 0' }} />\n            <Panels data={newEntries} clientsNumber={inputs.clientsNumber} />\n          </Container>\n      }\n      <GlobalStyle />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}